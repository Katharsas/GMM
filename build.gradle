/**
 * HOW TO BUILD
 * 
 * To build this web application, you must build the frontend and the backend.
 *
 * FRONTEND BUILD:
 * Nodejs and npm must be globally installed (windows: must be on PATH).
 * Run 'gradle gulp_build' to build frontend (javascript abd sass).
 * 
 * BACKEND BUILD & RUN:
 * See 'https://github.com/gretty-gradle-plugin/gretty' for detailed instructions.
 * User Gradle task 'appRun' to start embedded tomcat and deploy webapp.
 * 
 * CONFIGURATION:
 * Default configuration file can be found at 'src/main/resources/default.properties'.
 * Use configuration file at 'config/config.properties' to override defaults.
 */

buildscript {
    repositories {
        // gradle node/gulp plugin
        maven {
	    	url "https://plugins.gradle.org/m2/"
	    }
	    // gretty
	    jcenter()
    }
    dependencies {
    	classpath 'org.gretty:gretty:2.1.0'
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.gretty'
apply plugin: 'com.moowork.node'
apply plugin: "com.moowork.gulp"

group = 'de.gothic-reloaded-mod'
version = '0.5.3-SNAPSHOT'

description = "Gothic Mod Manager"

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
	// all
    mavenCentral()
    // gretty
    jcenter()
}
dependencies {

	// Spring 5
	ext.springVersion = '5.0.4.RELEASE'
	ext.springSecVersion = '5.0.3.RELEASE'
	
	compile group: 'org.springframework', name: 'spring-context', version: springVersion
    compile group: 'org.springframework', name: 'spring-core', version: springVersion
    compile group: 'org.springframework', name: 'spring-context-support', version: springVersion
    compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
    compile group: 'org.springframework', name: 'spring-test', version: springVersion
    compile group: 'org.springframework', name: 'spring-beans', version: springVersion
    compile group: 'org.springframework', name: 'spring-messaging', version: springVersion
    compile group: 'org.springframework', name: 'spring-websocket', version: springVersion
    compile group: 'org.springframework.security', name: 'spring-security-core', version: springSecVersion
    compile group: 'org.springframework.security', name: 'spring-security-config', version: springSecVersion
    compile group: 'org.springframework.security', name: 'spring-security-web', version: springSecVersion
    compile group: 'org.springframework.security', name: 'spring-security-taglibs', version: springSecVersion
    compile group: 'org.springframework.security', name: 'spring-security-messaging', version: springSecVersion

	// Libs
    compile group: 'com.google.jimfs', name: 'jimfs', version:'1.1'
    compile group: 'org.tmatesoft.svnkit', name: 'svnkit', version:'1.9.0'
    /* compile(group: 'com.sun.mail', name: 'javax.mail', version:'1.5.3') {
		exclude(module: 'activation')
    } */
    compile group: 'com.google.guava', name: 'guava', version:'18.0'
    compile group: 'joda-time', name: 'joda-time', version:'2.8.1'
    compile group: 'org.imgscalr', name: 'imgscalr-lib', version:'4.2'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.9.4'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.9.4'
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.3.2'
    compile group: 'org.apache.commons', name: 'commons-collections4', version:'4.1'
    compile group: 'com.thoughtworks.xstream', name: 'xstream', version:'1.4.8'
    compile group: 'org.freemarker', name: 'freemarker', version:'2.3.27-incubating'
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.2.3'
    compile group: 'commons-io', name: 'commons-io', version:'2.4'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version:'1.3.1'
    // JavaEE
    compile group: 'javax.servlet', name: 'jstl', version:'1.2'
    
    // Testing
	//testCompile group: 'junit', name: 'junit', version:'4.12'
    
    // JavaEE APIs
    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'4.0.0'
    providedCompile group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version:'2.3.1'
	providedCompile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    //providedCompile group: 'javax.websocket', name: 'javax.websocket-api', version:'1.1'
    
	// Change gretty tomcat version from 9.0.5 to newer
	def tomcatVersion = '9.0.6'
    gretty(
    	"org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
        "org.apache.tomcat.embed:tomcat-embed-el:${tomcatVersion}",
        "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}",
        "org.apache.tomcat.embed:tomcat-embed-websocket:${tomcatVersion}"
    )
    
}

// #####################
//  Backend Build
// #####################

// Resource Filtering
processResources {
    filesMatching('**/meta.properties') {
        expand(
            'gmm_version': "${project.version}",
            'gmm_name': "${project.description}",
        )
    }
}

// Embedded Tomcat/Jetty Configuration
gretty {
	contextPath = '/GMM'
	servletContainer = "tomcat9"
	//serverConfigFile = "tomcat.xml" // Connectors for HTTP2 can be specified in this file
	logbackConfigFile = "src/main/resources/logback.xml"
	recompileOnSourceChange = false // call javaCompile to reload or auto reload
}


// #####################
//  Fontend Build
// #####################

gulp_three.dependsOn 'npmInstall'
gulp_three.dependsOn 'installGulp'

gulp_build_js.dependsOn 'npmInstall'
gulp_build_js.dependsOn 'installGulp'

gulp_build_sass.dependsOn 'npmInstall'
gulp_build_sass.dependsOn 'installGulp'

gulp_build.dependsOn 'npmInstall'
gulp_build.dependsOn 'installGulp'
gulp_build.dependsOn 'gulp_three'

node {
	download = false
	nodeModulesDir = file("${project.projectDir}/src/main/frontend")
}
gulp {
	workDir = file("${project.projectDir}/src/main/frontend")
}