<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.gothic-reloaded-mod</groupId>
	<artifactId>gmm</artifactId>
	<packaging>war</packaging>
	<version>0.4.4-SNAPSHOT</version>
	<name>Gothic Mod Manager</name>
	<url>https://github.com/Katharsas/GMM</url>
	
	<pluginRepositories>
		<pluginRepository>
			<id>apache.snapshots</id>
			<name>Apache Snapshots</name>
			<url>http://repository.apache.org/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	
	<!-- 
	
		Maven commands used for building/testing/running etc.
		#######################################################################
		
		1. Build & Run locally with embedded Tomcat:
		maven tomcat7:run
		
		2. Build executable jar file with embedded Tomcat:
		maven package
		
		3. Build & Deploy webapp war to external Tomcat7 using web interface:
		maven tomcat7:deploy
		
		
		Notes:
		- SASS/JS Compiling will work automatically in Eclipse (triggered by incremental building)
		- You may want to clear external Tomcat before deploying or redeploying.
		
	 -->

	<properties>
		<org.springframework.version>4.2.0.RELEASE</org.springframework.version>
		<org.springframework.security.version>4.0.2.RELEASE</org.springframework.security.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Tomcat7-Maven-Plugin only works with tomcat 7, dont even try 8+ -->
		<!-- In the long run, the plugin should be replaced -->
		<tomcat.version>7.0.68</tomcat.version>
	</properties>

	<dependencies>
		<!-- Mail, excluded JAF because newer JAF version included in Java SE 1.6 -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.5.3</version>
			<exclusions>
				<exclusion>
					<artifactId>activation</artifactId>
					<groupId>javax.activation</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Google Guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>18.0</version>
		</dependency>
		<!-- Joda Time -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.8.1</version>
		</dependency>
		<!-- Joda Time -->
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.6.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.6.0</version>
		</dependency>
		<!-- JUnit -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<!-- Commons lang -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.3.2</version>
		</dependency>
		<!-- XStream -->
		<dependency>
			<groupId>com.thoughtworks.xstream</groupId>
			<artifactId>xstream</artifactId>
			<version>1.4.8</version>
		</dependency>
		<!-- Freemarker -->
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.20</version>
		</dependency>
		<!-- Java EE -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.websocket</groupId>
			<artifactId>javax.websocket-api</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		<!-- Tomcat stuff -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-juli</artifactId>
			<version>${tomcat.version}</version>
			<scope>provided</scope>
		</dependency>
		<!-- Logging: Bridge to slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.12</version>
		</dependency>
		<!-- Logging: Logback, bridge includes later slf4j-api than Logback -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.3</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Spring Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- needed for freemarker FreeMarkerConfigurer stuff -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-messaging</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-messaging</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<!-- Apache Commons Upload -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- Apache Commons Upload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Building with embedded Server/Deploying to local Server -->
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.3-SNAPSHOT</version>
					<!-- Overwrite dependencies to effectivly set version of embedded tomcat server -->
					<!-- Setting version to 8+ will most likely not work. -->
					<dependencies>
						<dependency>
							<groupId>org.apache.tomcat.embed</groupId>
							<artifactId>tomcat-embed-core</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-util</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-coyote</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-api</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-jdbc</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-dbcp</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-servlet-api</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-jsp-api</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-jasper</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-jasper-el</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-el-api</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-catalina</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-tribes</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-catalina-ha</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-annotations-api</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat</groupId>
							<artifactId>tomcat-juli</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat.embed</groupId>
							<artifactId>tomcat-embed-logging-juli</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat.embed</groupId>
							<artifactId>tomcat-embed-logging-log4j</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.tomcat.embed</groupId>
							<artifactId>tomcat-embed-websocket</artifactId>
							<version>${tomcat.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			
			<!-- Frontend build -->
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>0.0.26</version>
				<configuration>
					<workingDirectory>src/main/frontend</workingDirectory>
					<installDirectory>.</installDirectory>
				</configuration>
				<executions>
					<!-- Config from: https://github.com/eirslett/frontend-maven-plugin -->
					<!-- phase optional for all executions: default phase is "generate-resources" -->
					<!--  disable some of the following executions to improve build speed -->
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<nodeVersion>v4.1.1</nodeVersion>
							<npmVersion>3.3.3</npmVersion>
							<nodeDownloadRoot>https://nodejs.org/dist/</nodeDownloadRoot>
							<npmDownloadRoot>http://registry.npmjs.org/npm/-/</npmDownloadRoot>
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>gulp build</id>
						<goals>
							<goal>gulp</goal>
						</goals>
						<phase>generate-resources</phase>
						<configuration>
							<srcdir>src/main/frontend</srcdir>
							<outputdir>src/main/webapp/resources</outputdir>
							<arguments>build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- exclude assets and test data -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>default-war</id>
						<phase>package</phase>
						<configuration>
							<packagingExcludes>
								<!--
									If a build should contain some sample data,
									put anything unwanted into excluded folder like below,
									but never commit a pom that includes sample data!
									Always check if the build contains only the expected files!
								-->
<!-- 								WEB-INF/data/assets/new/**, -->
<!-- 								WEB-INF/data/assets/original/excluded/**, -->
								WEB-INF/data/assets/**,
								WEB-INF/data/tasks/**,
								WEB-INF/data/users/**,
								WEB-INF/dataTesting/**,
								WEB-INF/blender/**
							</packagingExcludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<configuration>
					<path>/GMM</path>
					<port>8080</port>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>tomcat-run</id>
						<goals>
							<goal>exec-war-only</goal>
						</goals>
						<phase>package</phase>
						<configuration>
								<path>/GMM</path>                              
                                <attachartifactclassifier>exec-war</attachartifactclassifier>
                                <attachartifactclassifiertype>jar</attachartifactclassifiertype>
						</configuration>
					</execution>
				<!-- Enable Hot Reload -->
<!-- 					<execution> -->
<!-- 						<id>run-embedded</id> -->
<!-- 						<goals> -->
<!-- 							<goal>run</goal> -->
<!-- 						</goals> -->
<!-- 						<phase>pre-integration-test</phase> -->
<!-- 						<configuration> -->
<!-- 							<useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader> -->
<!-- 							<contextFile>${project.basedir}/tomcat/context.xml</contextFile> -->
<!-- 						</configuration> -->
<!-- 					</execution> -->
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>ISO-8859-1</encoding>
				</configuration>
			</plugin>
			    
		</plugins>
	</build>
</project>
