//------------------------------------------------------------------------------
// Global styles for inclusion
//------------------------------------------------------------------------------
@mixin cursor-clickable {
	cursor:pointer;
}


//------------------------------------------------------------------------------
// General mixins with an above-average amount of logic.
// Big loads of logic should go into javascript.
//------------------------------------------------------------------------------

@mixin browser-property-prefix($property, $value) {
	-webkit-#{$property}: $value;
	-moz-#{$property}: $value;
	-ms-#{$property}: $value;
	-o-#{$property}: $value;
	#{$property}: $value;
}

@mixin browser-value-prefix($property, $value) {
	#{$property}: -webkit-#{$value};
	#{$property}: -moz-#{$value};
	#{$property}: -ms-#{$value};
	#{$property}: -o-#{$value};
	#{$property}: $value;
}

@mixin background-linear-gradient($linear-gradient-args...) {
	@include browser-value-prefix(background-image, linear-gradient(#{$linear-gradient-args}));
}

@mixin button-color($color, $gradient-width: 20%) {

	$top:lighten($color, 7%);
	$bot:darken($color, 0%);//4%
	@include background-linear-gradient(top, $top 0%, $color 100%-$gradient-width, $color $gradient-width, $bot 100%);
	box-shadow: inset 0px 1px 1px lighten($color, 20%);
	
	&:hover {
		$color:lighten($color, 6%);
		$top:lighten($color, 6%);
		$bot:darken($color, 2%);//6%
		@include background-linear-gradient(top, $top 0%, $color 100%-$gradient-width, $color $gradient-width, $bot 100%);
		box-shadow: inset 0px 1px 1px lighten($color, 20%);
	}
}

@mixin indented-shadow-for-bright($color) {
	box-shadow: inset -1px -1px 0px lighten($color, 13%), inset 1px 1px 0px darken($color, 17%);
}

@mixin indented-shadow-for-color($color) {
	box-shadow: inset -1px -1px 0px lighten($color, 10%), inset 1px 1px 0px darken($color, 4%);
}


//------------------------------------------------------------------------------
// Functions
//------------------------------------------------------------------------------

/**
 * @param amount - 0-n, relative to original brigntness, 1 doesn't change color;
 */
@function setLightness($color, $amount) {
	$original: lightness($color);
	$result: $color;
	
	@if $amount >= 1 {
		$result: lighten($color, ($amount - 1) * $original);
	}
	@else if $amount < 0 {
		$result: null;
	}
	@else {
		$result: darken($color, (1 - $amount) * $original);
	}
	@return $result;
}

/**
 * @param amount - 0-n, relative to original saturation, 1 doesn't change color;
 */
@function setSaturation($color, $amount) {
	$original: saturation($color);
	$result: $color;
	
	@if $amount >= 1 {
		$result: saturate($color, ($amount - 1) * $original);
	}
	@else if $amount < 0 {
		$result: null;
	}
	@else {
		$result: desaturate($color, (1 - $amount) * $original);
	}
	@return $result;
}

@function getBrightScheme($darkColor) {
	$result: lighten($bgc-subpage-dark, 12%);
	$result: setSaturation($result, 0.9);
	@return $result;
}